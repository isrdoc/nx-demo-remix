{
  "version": 3,
  "sources": ["browser-route-module:/Users/igorsrdoc/Documents/Code/Next/nx-demo-remix/packages/demo/app/routes/notifications.tsx?browser", "../../../app/routes/notifications.tsx"],
  "sourcesContent": ["export { default } from \"/Users/igorsrdoc/Documents/Code/Next/nx-demo-remix/packages/demo/app/routes/notifications.tsx\";", "import { redirect } from '@remix-run/node';\nimport type { LoaderFunction, ActionFunction } from '@remix-run/node';\nimport { json } from '@remix-run/node';\nimport {\n  useLoaderData,\n  Form,\n  useSubmit,\n  useTransition,\n} from '@remix-run/react';\nimport type { Notification } from './notifications.types';\n\nconst API = 'http://localhost:5001';\n\ntype LoaderData = { notifications: Notification[] };\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const url = new URL(request.url);\n  const search = new URLSearchParams(url.search);\n  const searchResponse = await fetch(\n    `${API}/search?type=${search.get('type') || ''}`\n  );\n  const notifications = await searchResponse.json();\n  const data: LoaderData = { notifications };\n  return json(data);\n};\n\nexport const action: ActionFunction = async ({ request }) => {\n  const form = await request.formData();\n  const type = form.get('type');\n  return redirect(`/notifications?type=${type}`);\n};\n\nexport default function Notifications() {\n  const { notifications } = useLoaderData<LoaderData>();\n  const submit = useSubmit();\n  const transition = useTransition();\n\n  function handleChange(event: React.FormEvent<HTMLFormElement>) {\n    submit(event.currentTarget, { replace: true });\n  }\n\n  return (\n    <Container>\n      <Title>Notifications</Title>\n      <SearchForm method=\"post\" action=\"/notifications\" onChange={handleChange}>\n        <input type=\"text\" name=\"type\" placeholder=\"Type to filter events\" />\n      </SearchForm>\n      {transition.submission && <div>Searching...</div>}\n      {notifications.map((notification) => (\n        <div key={notification.id}>{JSON.stringify(notification)}</div>\n      ))}\n    </Container>\n  );\n}\n\nconst Container: React.FC = ({ children, ...rest }) => (\n  <div className=\"notifications--container\" {...rest}>\n    {children}\n  </div>\n);\nconst Title: React.FC = ({ children, ...rest }) => (\n  <h2 className=\"notifications--title\" {...rest}>\n    {children}\n  </h2>\n);\nconst SearchForm: React.FC<typeof Form> = ({ children, ...rest }) => (\n  <Form className=\"notifications--search-form\" {...rest}>\n    {children}\n  </Form>\n);\n"],
  "mappings": ";;;;;;;;;;;;AAAA;;;ACAA;AAgCe,yBAAyB;AACtC,QAAM,EAAE,kBAAkB;AAC1B,QAAM,SAAS;AACf,QAAM,aAAa;AAEnB,wBAAsB,OAAyC;AAC7D,WAAO,MAAM,eAAe,EAAE,SAAS;AAAA;AAGzC,SACE,oCAAC,WAAD,MACE,oCAAC,OAAD,MAAO,kBACP,oCAAC,YAAD;AAAA,IAAY,QAAO;AAAA,IAAO,QAAO;AAAA,IAAiB,UAAU;AAAA,KAC1D,oCAAC,SAAD;AAAA,IAAO,MAAK;AAAA,IAAO,MAAK;AAAA,IAAO,aAAY;AAAA,OAE5C,WAAW,cAAc,oCAAC,OAAD,MAAK,iBAC9B,cAAc,IAAI,CAAC,iBAClB,oCAAC,OAAD;AAAA,IAAK,KAAK,aAAa;AAAA,KAAK,KAAK,UAAU;AAAA;AAMnD,IAAM,YAAsB,CAAC,EAAE,aAAa,WAC1C,oCAAC,OAAD;AAAA,EAAK,WAAU;AAAA,KAA+B;AAAA,GAC3C;AAGL,IAAM,QAAkB,CAAC,EAAE,aAAa,WACtC,oCAAC,MAAD;AAAA,EAAI,WAAU;AAAA,KAA2B;AAAA,GACtC;AAGL,IAAM,aAAoC,CAAC,EAAE,aAAa,WACxD,oCAAC,MAAD;AAAA,EAAM,WAAU;AAAA,KAAiC;AAAA,GAC9C;",
  "names": []
}
